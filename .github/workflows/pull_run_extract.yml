name: Convert tar.xz to tar.gz

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  convert-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
  
    - name: Pull latest changes from fork
      run: |
        git pull origin main

    - name: Extract tar.xz file
      run: |
        TAR_XZ_PATH="adressen.tar.xz"
        EXTRACT_DIR="extracted_files"
        
        if [ -f "$TAR_XZ_PATH" ]; then
          echo "Extracting $TAR_XZ_PATH..."
          mkdir -p $EXTRACT_DIR
          tar -xf $TAR_XZ_PATH -C $EXTRACT_DIR
        else
          echo "$TAR_XZ_PATH not found!"
          exit 1
        fi

    - name: Move CSV file to root directory (flatten)
      run: |
        CSV_FILE=$(find extracted_files -name "*.csv" | head -n 1)
        echo "Found CSV file: $CSV_FILE"
        mv "$CSV_FILE" extracted_files/
        
    - name: Convert tar.xz to tar.gz
      run: |
        TAR_GZ_PATH="adressen.tar.gz"
        
        echo "Compressing extracted files into $TAR_GZ_PATH..."
        tar -czf $TAR_GZ_PATH -C extracted_files $(basename "$CSV_FILE")

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: $TAR_GZ_PATH
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload tar.gz file as release asset
      if: success() && steps.create_release.outputs.upload_url != ''
      run: |
        release_url=${{ steps.create_release.outputs.upload_url }}
        curl -XPOST -H "Authorization: token $GITHUB_TOKEN" \
             -H "Content-Type: application/octet-stream" \
             --data-binary @$TAR_GZ_PATH \
             "$release_url?name=$(basename $TAR_GZ_PATH)"
